# ---
kind: pipeline
name: default
type: kubernetes
platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: if-not-exists
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    dockerfile: Dockerfile
    force_tag: true
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/fms_cert_expiry
    tags:
    - ${DRONE_COMMIT_SHA}
    - ${DRONE_BUILD_NUMBER}
  when:
    branch:
      exclude:
      - master
    event:
    - push
#
# - name: trivy_scan
#   pull: if-not-exists
#   image: quay.io/ukhomeofficedigital/trivyscanner:b82
#   commands:
#   - trivy --ignore-unfixed --exit-code 1 --no-progress quay.io/ukhomeofficedigital/fms_cert_expiry:${DRONE_COMMIT_SHA}
#   when:
#     branch:
#       exclude:
#       - master
#     event:
#     - push

- name: deploy_to_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export KUBE_TOKEN=$$NOTPROD_KUBE_TOKEN
  - export KUBE_SERVER=$$NOTPROD_KUBE_SERVER
  - export AWS_ACCESS_KEY_ID=$$CI_AWS_ACCESS_KEY_ID
  - export AWS_SECRET_ACCESS_KEY=$$CI_AWS_SECRET_ACCESS_KEY
  - export BUCKET=$$NOTPROD_BUCKET
  - export AWS_DEFAULT_REGION=$$AWS_DEFAULT_REGION
  - export GET_EXPIRY_COMMAND=$$GET_EXPIRY_COMMAND
  - export SLACK_NOTIFICATION_WEBHOOK=$$NOTPROD_SLACK_NOTIFICATION_WEBHOOK
  - kd --delete --file kube/deployment.yml --file kube/cron.yml
  - kd -f kube/secret.yml -f kube/deployment.yml
  environment:
    INSECURE_SKIP_TLS_VERIFY: true
    KUBE_NAMESPACE: dq-apps-notprod
    NOTPROD_KUBE_TOKEN:
      from_secret: NOTPROD_KUBE_TOKEN
    NOTPROD_KUBE_SERVER:
      from_secret: NOTPROD_KUBE_SERVER
    CI_AWS_ACCESS_KEY_ID:
      from_secret: CI_AWS_ACCESS_KEY_ID
    CI_AWS_SECRET_ACCESS_KEY:
      from_secret: CI_AWS_SECRET_ACCESS_KEY
    NOTPROD_BUCKET:
      from_secret: NOTPROD_BUCKET
    AWS_DEFAULT_REGION:
      from_secret: AWS_DEFAULT_REGION
    GET_EXPIRY_COMMAND:
      from_secret: GET_EXPIRY_COMMAND
    NOTPROD_SLACK_NOTIFICATION_WEBHOOK:
      from_secret: NOTPROD_SLACK_NOTIFICATION_WEBHOOK
  when:
    event:
    - push

# - name: deploy_to_production
#   pull: if-not-exists
#   image: quay.io/ukhomeofficedigital/kd
#   commands:
#   - export KUBE_TOKEN=$$PROD_KUBE_TOKEN
#   - export KUBE_SERVER=$$PROD_KUBE_SERVER
#   - export AWS_ACCESS_KEY_ID=$$CI_AWS_ACCESS_KEY_ID
#   - export AWS_SECRET_ACCESS_KEY=$$CI_AWS_SECRET_ACCESS_KEY
#   - export BUCKET=$$PROD_BUCKET
#   - export AWS_DEFAULT_REGION=$$AWS_DEFAULT_REGION
#   - export GET_EXPIRY_COMMAND=$$GET_EXPIRY_COMMAND
#   - export SLACK_NOTIFICATION_WEBHOOK=$$PROD_SLACK_NOTIFICATION_WEBHOOK
#   - kd --delete --file kube/deployment.yml --file kube/cron.yml
#   - kd -f kube/secret.yml -f kube/deployment.yml
#   environment:
#     INSECURE_SKIP_TLS_VERIFY: true
#     KUBE_NAMESPACE: dq-apps
#     PROD_KUBE_TOKEN:
#       from_secret: PROD_KUBE_TOKEN
#     PROD_KUBE_SERVER:
#       from_secret: PROD_KUBE_SERVER
#     CI_AWS_ACCESS_KEY_ID:
#       from_secret: CI_AWS_ACCESS_KEY_ID
#     CI_AWS_SECRET_ACCESS_KEY:
#       from_secret: CI_AWS_SECRET_ACCESS_KEY
#     PROD_BUCKET:
#       from_secret: PROD_BUCKET
#     AWS_DEFAULT_REGION:
#       from_secret: AWS_DEFAULT_REGION
#     GET_EXPIRY_COMMAND:
#       from_secret: GET_EXPIRY_COMMAND
#     PROD_SLACK_NOTIFICATION_WEBHOOK:
#       from_secret: PROD_SLACK_NOTIFICATION_WEBHOOK
#   when:
#     event:
#     - push

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
